! ====================================
 DEFINICIÓN DE CONJUNTOS Y RELACIONES
 =====================================;
SETS:
!INDICES: i=producto j=planta_elaboradora k=centro;
    ! Productos (i): 1. leche entera, 2. descremada, 3. en polvo entera, 4. en polvo descremada, 5. crema, 6. manteca;
    ! Atributos: 
    ! - DEMANDA_PRODUCTO: demanda general de cada tipo de producto, 
    ! - FACTOR_REFRIGERACION: factor que determina los costos adicionales de tranporte para productos refrigerados por planta;
    PRODUCTOS /1..6/: DEMANDA_PRODUCTO, FACTOR_REFRIGERACION;       

    ! Plantas elaboradoras (j): 1. Buenos Aires, 2. Córdoba, 3. Santa Fe; 
    ! Atributos:
    ! - M: materia prima, 
    ! - L: leche descremada,
    ! - C: crema;
    PLANTAS /1..3/: M, L, C;               
         
    ! Centros de distribución (k): 1. CABA, 2. Rosario, 3. Mendoza, 4. Tucumán;
    ! Atributos:
    ! - FRACCION_DEMANDA: fracción de demanda según cada centro de distribución;
    CENTROS /1..4/: FRACCION_DEMANDA;                   

!Variables de decisión;
    !stock al final del periodo de productos en plantas (aplica a leche en polvo);
    STOCK(PRODUCTOS, PLANTAS): S;                     
    !cantidad de producto i de j a k;
    CANTIDADPRODUCTO(PRODUCTOS, PLANTAS, CENTROS): Q;
    ! Relación planta-centro: distancia y costo base transporte;
    PLXCN(PLANTAS, CENTROS): DIST, COSTDIST;    

!Conjuntos de datos a utilizar;
    ! Subconjunto para productos con capacidad (Leches fluidas agrupadas y leches en polvo agrupadas);
    PRODUCTOSAUX /1..4/;                       
    ! Capacidad de producción por planta para productos agrupados;
    PRODUXPL(PRODUCTOSAUX, PLANTAS): CAPMAX;   
    ! Escalar: disponibilidad total de leche cruda;
    SCALARS: DISPONIBILIDADLECHE;              
ENDSETS

DATA:

DEMANDA_PRODUCTO, FACTOR_REFERENCIA_PRODUCTO, FRACCION_DEMANDA, DIST, COSTDIST, CAPMAX, DISPONIBILIDADLECHE = @OLE(C:\Users\lucia\Downloads\TP\lingo.xlsx);

ENDDATA

!FUNCION OBJETIVO:;
[FO] MIN = @SUM(PRODUCTOS(I): @SUM(PLANTAS(J): @SUM(CENTROS(K): FACTOR_REFERENCIA_PRODUCTO(I) * COSTDIST(J,K) * Q(I,J,K) * 1/1000)))+ 20 * @SUM(PLANTAS(J): M(J));

!1 - Satisfacción mínima de demanda por producto y centro;
@FOR(PRODUCTOS(I), CENTROS(K):
    @SUM(PLANTAS(J): Q(I,J,K)) >= FRACCION_DEMANDA(I,K) * DEMANDA_PRODUCTO(I)
);

!2 - Restricción de disponibilidad total de leche cruda;
@SUM(PLANTAS(J), CENTROS(K): 1.063 * Q(1,J,K)) +
@SUM(PLANTAS(J): 1.063 * L(J)) +
@SUM(PLANTAS(J), CENTROS(K): 8.755 * Q(3,J,K)) +
@SUM(PLANTAS(J): 8.755 * S(3,J)) <= DISPONIBILIDADLECHE;

!3 - Definición de L(j) para j en {1,2} - VER COMO RESTRINGIR;
@FOR(PLANTAS(J):
    L(J) = 
        @SUM(CENTROS(K): Q(2,J,K)) +
        M(J) +
        11.525 * @SUM(CENTROS(K): Q(4,J,K)) -
        11.525 * S(4,J)
);

!4 - Cantidad de leche desnatada en el planta 4;
@SUM(PLANTAS(J): M(J)) - 
@SUM(CENTROS(K): Q(2,3,K)) - 
11.525 * S(4,J) = 0;

!5 - Crema - subproducto Cj para j en {1,2} - VER COMO RESTRINGIR;
@FOR(PLANTAS(J):
    C(J) = 0.08 * L(J)
);

!6 - Definición de C(j) como función de productos 5 y 6 enviados desde planta j={1,2};
@FOR(PLANTAS(J):
    C(J) = 
        @SUM(CENTROS(K): Q(5,J,K)) + 
        2.77 * @SUM(CENTROS(K): Q(6,J,K))
);

!7 - Restricción de disponibilidad de leche entera en plantas 1 y 2 - VER COMO RESTRINGIR;;
@FOR(PLANTAS(J):
    @SUM(CENTROS(K): Q(1,J,K)) +
    L(J) +
    11.525 * (
        @SUM(CENTROS(K): Q(3,J,K)) + 
        S(3,J)
    ) <= P(1,J)
);

!8 - Restricción de disponibilidad de leche cruda para planta 3;
@SUM(CENTROS(K): Q(1,3,K)) +
8.755 * (
    @SUM(CENTROS(K): Q(3,3,K)) +
    S(3,3)
) <= P(1,3);


!9 - Restricción de capacidad del subproducto Cj para j en {1,2} - VER COMO RESTRINGIR;
@FOR(PLANTAS(J):
    C(J) <= P(3,J)
);

!10 - Restricción de capacidad para producto 6 (manteca)para j en {1,2} - VER COMO RESTRINGIR;;
@FOR(PLANTAS(J):
    @SUM(CENTROS(K): Q(6,J,K)) <= P(4,J)
);

!11 - Cantidad de leche en polvo producida en las plantas;
@FOR(PLANTAS(J):
    @SUM(PRODUCTOS(I): S(I,J)) +
    @SUM(CENTROS(K): Q(I,J,K)))
    <= CAPMAX(2,J);
);

!12 - Restricciones no negatividad;
@FOR(PRODUCTOS(I), PLANTAS(J), CENTROS(K):
    Q(I,J,K) >= 0
);

@FOR(PLANTAS(J), PRODUCTOS(I):
     S(I,J) >= 0
    )
);
